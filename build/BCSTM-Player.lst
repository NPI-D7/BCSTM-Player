         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w __register_frame_info
         w userAppExit
         w userAppInit
00000000 00000401 B __ctru_dev_path_buf
00000000 b _TLS_MODULE_BASE_
00000000 a shift
00000000 a shift
00000404 00000802 B __ctru_dev_utf16_buf
00100000 A __start__
00100000 T _start
00100008 T __service_ptr
0010000c T __apt_appid
00100010 T __heap_size
00100014 T __linear_heap_size
00100018 T __system_arglist
0010001c T __system_runflags
00100020 t startup
00100058 t ClearMem
0010006c t ClrLoop
00100094 T _init
001000b0 00000210 T BCSTM::BCSTM()
001000b0 00000210 T BCSTM::BCSTM()
001002c0 0000009c T BCSTM::~BCSTM()
001002c0 0000009c T BCSTM::~BCSTM()
0010035c 0000055c T BCSTM::openFromFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
001008b8 00000058 T BCSTM::pause()
00100910 00000060 T BCSTM::stop()
00100970 00000038 T BCSTM::read32()
001009a8 0000003c T BCSTM::read16()
001009e4 0000002c T BCSTM::read8()
00100a10 000001b8 T BCSTM::fillBuffers()
00100bc8 00000064 T BCSTM::streamData()
00100c2c 00000064 T BCSTM::tick()
00100c90 00000048 T BCSTM::fileAdvance(unsigned long long)
00100cd8 000002ac T BCSTM::play()
00100f84 t .udivsi3_skip_div0_test
00100f84 T __aeabi_uidiv
00100f84 000001ec T __udivsi3
00101170 00000020 T __aeabi_uidivmod
00101190 T __aeabi_idiv
00101190 00000220 T __divsi3
00101198 t .divsi3_skip_div0_test
001013b0 00000020 T __aeabi_idivmod
001013d0 00000004 W __aeabi_idiv0
001013d0 00000004 W __aeabi_ldiv0
001013d4 T __aeabi_ldivmod
001014a8 T __aeabi_uldivmod
001014e4 00000014 T __restore_core_regs
001014e4 00000014 T restore_core_regs
001014f8 T __gnu_Unwind_Restore_VFP
00101500 T __gnu_Unwind_Save_VFP
00101508 T __gnu_Unwind_Restore_VFP_D
00101510 T __gnu_Unwind_Save_VFP_D
00101518 T __gnu_Unwind_Restore_VFP_D_16_to_31
00101520 T __gnu_Unwind_Save_VFP_D_16_to_31
00101528 T __gnu_Unwind_Restore_WMMXD
0010156c T __gnu_Unwind_Save_WMMXD
001015b0 T __gnu_Unwind_Restore_WMMXC
001015c4 T __gnu_Unwind_Save_WMMXC
001015d8 00000024 T ___Unwind_RaiseException
001015d8 00000024 T _Unwind_RaiseException
001015fc 00000024 T ___Unwind_Resume
001015fc 00000024 T _Unwind_Resume
00101620 00000024 T ___Unwind_Resume_or_Rethrow
00101620 00000024 T _Unwind_Resume_or_Rethrow
00101644 00000024 T ___Unwind_ForcedUnwind
00101644 00000024 T _Unwind_ForcedUnwind
00101668 00000024 T ___Unwind_Backtrace
00101668 00000024 T _Unwind_Backtrace
001016a8 00000390 T strcmp
00101a30 T __aeabi_drsub
00101a38 000002b0 T __aeabi_dsub
00101a38 000002b0 T __subdf3
00101a3c 000002ac T __adddf3
00101a3c 000002ac T __aeabi_dadd
00101ce8 00000024 T __aeabi_ui2d
00101ce8 00000024 T __floatunsidf
00101d0c 00000028 T __aeabi_i2d
00101d0c 00000028 T __floatsidf
00101d34 00000048 T __aeabi_f2d
00101d34 00000048 T __extendsfdf2
00101d7c 00000074 T __aeabi_ul2d
00101d7c 00000074 T __floatundidf
00101d90 00000060 T __aeabi_l2d
00101d90 00000060 T __floatdidf
00101df0 t __do_global_dtors_aux
00101e30 t frame_dummy
00101e5c 000001f4 T main
00102050 00000188 W std::vector<unsigned char, LinearAllocator<unsigned char> >::_M_default_append(unsigned int)
001021d8 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
001021fc 00000004 t addrMapNodeDestructor(rbtree_node*)
00102200 00000120 T linearMemAlign
00102320 00000008 T linearAlloc
00102328 0000005c T linearFree
00102384 00000084 T MemPool::CoalesceRight(MemBlock*)
00102408 00000170 T MemPool::Allocate(MemChunk&, unsigned long, int)
00102578 000000fc T MemPool::Deallocate(MemChunk const&)
00102674 00000178 T consoleDrawChar
001027ec 00000124 T consolePrintChar
00102910 00000a00 T con_write
00103310 00000168 T consoleInit
00103478 000000f4 t newRow
0010356c 000000d0 t gfxPresentFramebuffer
0010363c 0000001c T gfxIsWide
00103658 000000ec T gfxSetScreenFormat
00103744 00000010 T gfxSetDoubleBuffering
00103754 00000108 T gfxInit
0010385c 00000010 T gfxInitDefault
0010386c 000000b4 T gfxExit
00103920 000000a0 T gfxGetFramebuffer
001039c0 0000010c T gfxFlushBuffers
00103acc 00000050 T gfxSwapBuffersGpu
00103b1c 00000158 t ndspUpdateMaster
00103c78 00000110 t ndspFinalize
00103d88 00000318 t ndspThreadMain
001040a0 0000024c t ndspInitialize.part.0
001042ec 000000fc t ndspHookCallback
001043e8 000003dc T ndspInit
001047c4 000000cc T ndspExit
00104890 000000c8 T ndspChnReset
00104958 00000018 T ndspChnSetFormat
00104970 00000050 T ndspChnSetPaused
001049c0 00000064 T ndspChnSetRate
00104a24 00000088 T ndspChnSetMix
00104aac 00000070 T ndspChnSetAdpcmCoefs
00104b1c 000000a8 T ndspChnWaveBufClear
00104bc4 000000b8 T ndspChnWaveBufAdd
00104c7c 00000040 T ndspiInitChn
00104cbc 0000002c T ndspiDirtyChn
00104ce8 00000480 T ndspiUpdateChn
00105168 00000180 T ndspiReadChnState
001052e8 000000a4 T cfguInit
0010538c 0000003c T cfguExit
001053c8 0000004c T CFGU_GetConfigInfoBlk2
00105414 000000a4 t DSP_LoadComponent.part.0
001054b8 000000dc T dspInit
00105594 00000078 T dspExit
0010560c 00000024 T dspHook
00105630 00000030 T dspUnhook
00105660 000000ac T aptDspSleep
0010570c 000000b4 T aptDspWakeup
001057c0 00000044 T aptDspCancel
00105804 00000050 T DSP_FlushDataCache
00105854 00000034 T DSP_SetSemaphore
00105888 00000034 T DSP_SetSemaphoreMask
001058bc 00000038 T DSP_GetSemaphoreHandle
001058f4 0000003c T DSP_LoadComponent
00105930 00000044 T DSP_RegisterInterruptEvents
00105974 00000074 T DSP_ReadPipeIfPossible
001059e8 0000004c T DSP_WriteProcessPipe
00105a34 00000040 T DSP_ConvertProcessAddressFromDspDram
00105a74 00000040 T DSP_RecvData
00105ab4 0000004c T DSP_RecvDataIsReady
00105b00 00000c58 t gspHardwareInit
00106758 00000254 T gspInit
001069ac 000000f0 T gspExit
00106a9c 00000010 T gspHasGpuRight
00106aac 00000098 T gspPresentBuffer
00106b44 00000050 T gspWaitForEvent
00106b94 00000004 W gxCmdQueueInterrupt
00106b98 00000160 t gspEventThreadMain
00106cf8 00000050 T GSPGPU_FlushDataCache
00106d48 00000034 T GSPGPU_SetLcdForceBlack
00106d7c 00000068 T GSPGPU_AcquireRight
00106de4 00000048 T GSPGPU_ReleaseRight
00106e2c 0000007c T GSPGPU_ImportDisplayCaptureInfo
00106ea8 0000002c T GSPGPU_SaveVramSysArea
00106ed4 0000002c T GSPGPU_RestoreVramSysArea
00106f00 000001b0 t aptConvertScreenForCapture
001070b0 0000015c T aptSendCommand
0010720c 00000038 t aptExitProcess
00107244 000002f0 T aptExit
00107534 000000d8 T aptHandleSleep
0010760c 00000084 T APT_SleepIfShellClosed
00107690 00000084 T aptSetSleepAllowed
00107714 00000084 T APT_UnlockTransition
00107798 00000484 t aptEventHandler
00107c1c 000000b0 T APT_ReceiveParameter
00107ccc 000000b0 t aptReceiveParameter.constprop.0
00107d80 000002bc t aptScreenTransfer
0010803c 000002d0 t aptWaitForWakeUp.isra.0
0010830c 000000f8 T aptJumpToHomeMenu
00108404 0000004c T aptMainLoop
00108450 00000234 T aptInit
00108684 0000007c T APT_CheckNew3DS
00108700 00000024 W hidShouldUseIrrst
00108724 0000018c T hidInit
001088b0 000000e8 T hidExit
00108998 00000294 T hidScanInput
00108c2c 00000010 T hidKeysDown
00108c3c 000000c8 T fsInit
00108d04 0000003c T fsExit
00108d40 00000060 T fsExemptFromSession
00108da0 00000050 T fsUnexemptFromSession
00108df0 000000cc T FSUSER_OpenFile
00108ebc 000000d4 T FSUSER_OpenFileDirectly
00108f90 000000bc T FSUSER_DeleteFile
0010904c 000000f8 T FSUSER_RenameFile
00109144 000000bc T FSUSER_DeleteDirectory
00109200 000000d4 T FSUSER_CreateFile
001092d4 000000c4 T FSUSER_CreateDirectory
00109398 000000f8 T FSUSER_RenameDirectory
00109490 000000b4 T FSUSER_OpenDirectory
00109544 00000094 T FSUSER_OpenArchive
001095d8 0000008c T FSUSER_CloseArchive
00109664 00000074 T FSUSER_GetSdmcArchiveResource
001096d8 00000064 T FSUSER_IsSdmcWritable
0010973c 00000058 T FSFILE_Read
00109794 00000060 T FSFILE_Write
001097f4 00000038 T FSFILE_GetSize
0010982c 00000028 T FSFILE_SetSize
00109854 0000003c T FSFILE_Close
00109890 00000024 T FSFILE_Flush
001098b4 00000050 T FSDIR_Read
00109904 0000003c T FSDIR_Close
00109940 00000010 T rbtree_init
00109950 000001a0 t do_insert
00109af0 00000008 T rbtree_insert
00109af8 00000090 T rbtree_rotate
00109b88 00000338 T rbtree_remove
00109ec0 00000074 T rbtree_find
00109f38 000001e0 W __system_allocateHeaps
0010a118 00000038 W __libctru_init
0010a150 000000f0 W __system_initArgv
0010a240 T svcControlMemory
0010a260 T svcQueryMemory
0010a290 T svcExitProcess
0010a298 T svcCreateThread
0010a2b8 T svcExitThread
0010a2c0 T svcSleepThread
0010a2c8 T svcReleaseMutex
0010a2d0 T svcCreateEvent
0010a2e4 T svcSignalEvent
0010a2ec T svcClearEvent
0010a2f4 T svcMapMemoryBlock
0010a2fc T svcUnmapMemoryBlock
0010a304 T svcCreateAddressArbiter
0010a318 T svcArbitrateAddressNoTimeout
0010a320 T svcCloseHandle
0010a328 T svcWaitSynchronization
0010a330 T svcWaitSynchronizationN
0010a358 T svcDuplicateHandle
0010a36c T svcGetSystemTick
0010a374 T svcConnectToPort
0010a388 T svcSendSyncRequest
0010a390 T svcGetResourceLimit
0010a3a4 T svcGetResourceLimitLimitValues
0010a3ac T svcGetResourceLimitCurrentValues
0010a3b4 T svcBreak
0010a3bc W initSystem
0010a40c W __ctru_exit
0010a424 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0010a448 00000004 t addrMapNodeDestructor(rbtree_node*)
0010a44c 00000114 T vramMemAlign
0010a560 00000008 T vramAlloc
0010a568 0000005c T vramFree
0010a5c4 0000000c T __sync_init
0010a5d0 00000018 T __sync_fini
0010a5e8 0000002c T syncArbitrateAddress
0010a614 0000001c T LightLock_Init
0010a630 00000094 T LightLock_Lock
0010a6c4 00000044 T LightLock_TryLock
0010a708 00000040 T LightLock_Unlock
0010a748 00000024 T RecursiveLock_Init
0010a76c 00000030 T RecursiveLock_Lock
0010a79c 00000078 T RecursiveLock_TryLock
0010a814 00000054 T RecursiveLock_Unlock
0010a868 00000040 T LightEvent_Init
0010a8a8 000000a4 T LightEvent_Clear
0010a94c 000000c8 T LightEvent_Signal
0010aa14 00000058 T LightEvent_TryWait
0010aa6c 000000b0 T LightEvent_Wait
0010ab1c 00000084 W envGetHandle
0010aba0 00000050 W envDestroyHandles
0010abf0 00000074 T osConvertVirtToPhys
0010ac64 00000054 T osGetTimeRef
0010acb8 000000e4 T osGetTime
0010ad9c 00000074 T __libctru_gtod
0010ae10 00000034 T __ctru_speedup_config
0010ae44 00000124 T srvInit
0010af68 00000058 T srvExit
0010afc0 00000080 T srvGetServiceHandleDirect
0010b040 00000048 T srvGetServiceHandle
0010b088 00000038 T srvPublishToSubscriber
0010b0c0 00000188 T threadCreate
0010b248 0000002c T threadFree
0010b274 00000024 T threadJoin
0010b298 00000030 T threadGetCurrent
0010b2c8 00000040 T threadExit
0010b308 00000044 t _thread_begin
0010b34c 00000094 t mappableFindAddressWithin
0010b3e0 00000028 T mappableInit
0010b408 00000080 T mappableAlloc
0010b488 00000004 T mappableFree
0010b48c 00000160 T irrstInit
0010b5ec 000000cc T irrstExit
0010b6b8 000000b0 T irrstScanInput
0010b768 00000024 T irrstKeysHeld
0010b78c 0000000c T srvPmGetSessionHandle
0010b798 00000074 T ptmSysmInit
0010b80c 0000003c T ptmSysmExit
0010b848 00000034 T PTMSYSM_ConfigureNew3DSCPU
0010b87c 00000050 T rbtree_node_next
0010b8cc 00000030 W __appInit
0010b8fc 00000030 t __libctru_nanosleep
0010b92c 00000030 t __libctru_get_reent
0010b95c 000000f8 T __system_initSyscalls
0010ba54 00000030 W __appExit
0010ba84 00000090 W __libctru_exit
0010bb14 00000014 t archive_link
0010bb28 00000014 t archive_dirreset
0010bb3c 00000014 t archive_chmod
0010bb50 00000024 t error_cmp
0010bb74 00000050 t archive_translate_error
0010bbc4 000000d4 t archive_seek
0010bc98 0000007c t _archiveInit.part.0
0010bd14 0000008c t archiveFindDevice.part.0
0010bda0 00000294 t archive_utf16path
0010c034 000000a0 t _archiveUnmountDeviceStruct.part.0
0010c0d4 00000014 t archive_fchmod
0010c0e8 00000014 t archive_statvfs
0010c0fc 00000158 t _archiveMountDevice
0010c254 000000e8 t archive_diropen
0010c33c 000000a4 t archive_fstat
0010c3e0 0000006c t archive_close
0010c44c 0000006c t archive_fsync
0010c4b8 00000070 t archive_dirclose
0010c528 000000e8 t sdmc_statvfs
0010c610 00000080 t archive_ftruncate
0010c690 000000fc t archive_chdir
0010c78c 000000b0 t archive_read
0010c83c 000000ac t archive_unlink
0010c8e8 000000c8 t archive_rmdir
0010c9b0 000000ec t archive_mkdir
0010ca9c 000001a8 t archive_stat
0010cc44 00000184 t archive_rename
0010cdc8 00000168 t archive_dirnext
0010cf30 0000012c t archive_write
0010d05c 000001f0 t archive_open
0010d24c 000001a4 T archiveMountSdmc
0010d3f0 00000054 T archiveUnmountAll
0010d444 000000e8 T utf16_to_utf8
0010d52c 00000064 T decode_utf16
0010d590 0000013c T decode_utf8
0010d6cc 000000c0 T utf8_to_utf16
0010d78c T __aeabi_read_tp
0010d798 00000060 T encode_utf16
0010d7f8 000000fc T encode_utf8
0010d8f4 00000004 T operator delete(void*)
0010d8f8 0000002c T std::__throw_bad_alloc()
0010d924 00000048 T std::__throw_logic_error(char const*)
0010d96c 00000048 T std::__throw_length_error(char const*)
0010d9b4 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
0010da0c 0000000c T std::bad_alloc::what() const
0010da18 00000020 T std::bad_alloc::~bad_alloc()
0010da18 00000020 T std::bad_alloc::~bad_alloc()
0010da38 0000002c T std::bad_alloc::~bad_alloc()
0010da64 00000004 T operator delete(void*, unsigned int)
0010da68 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0010db38 0000009c t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
0010dbd4 00000044 T __cxa_allocate_exception
0010dc18 00000030 T __cxa_free_exception
0010dc48 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0010dc88 T __cxa_end_cleanup
0010dc98 00000138 T __cxa_type_match
0010ddd0 000000b4 T __cxa_begin_cleanup
0010de84 000000b4 T __gnu_end_cleanup
0010df38 000000cc T __cxa_begin_catch
0010e004 000000e0 T __cxa_end_catch
0010e0e4 00000004 T std::exception::~exception()
0010e0e4 00000004 T std::exception::~exception()
0010e0e8 00000004 T std::bad_exception::~bad_exception()
0010e0e8 00000004 T std::bad_exception::~bad_exception()
0010e0ec 0000000c T transaction clone for std::bad_exception::what() const
0010e0ec 0000000c T std::bad_exception::what() const
0010e0f8 00000018 T std::bad_exception::~bad_exception()
0010e110 0000000c T __cxa_get_globals_fast
0010e11c 0000000c T __cxa_get_globals
0010e128 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0010e290 00000064 t base_of_encoded_value(unsigned char, _Unwind_Context*)
0010e2f4 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0010e3cc 000006f8 T __gxx_personality_v0
0010eac4 00000038 T __cxxabiv1::__terminate(void (*)())
0010eafc 00000018 T std::terminate()
0010eb14 0000000c T __cxxabiv1::__unexpected(void (*)())
0010eb20 00000018 T std::unexpected()
0010eb38 00000014 T std::get_terminate()
0010eb4c 00000014 T std::get_unexpected()
0010eb60 00000070 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0010ebd0 00000070 T __cxa_init_primary_exception
0010ec40 00000058 T __cxa_throw
0010ec98 000000b0 T __cxa_rethrow
0010ed48 0000005c T operator new(unsigned int)
0010eda4 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0010eda4 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0010edc4 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0010edf0 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0010ee5c 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0010ef38 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0010ef7c 00000004 T std::type_info::~type_info()
0010ef7c 00000004 T std::type_info::~type_info()
0010ef80 00000008 T std::type_info::__is_pointer_p() const
0010ef80 00000008 T std::type_info::__is_function_p() const
0010ef88 0000004c T std::type_info::operator==(std::type_info const&) const
0010efd4 00000008 T std::logic_error::what() const
0010efd4 00000008 T std::runtime_error::what() const
0010efdc 00000064 T std::logic_error::~logic_error()
0010efdc 00000064 T std::logic_error::~logic_error()
0010f040 00000064 T std::length_error::~length_error()
0010f040 00000064 T std::length_error::~length_error()
0010f0a4 0000006c T std::logic_error::~logic_error()
0010f110 0000006c T std::length_error::~length_error()
0010f17c 00000038 T std::logic_error::logic_error(char const*)
0010f17c 00000038 T std::logic_error::logic_error(char const*)
0010f1b4 00000044 T std::length_error::length_error(char const*)
0010f1b4 00000044 T std::length_error::length_error(char const*)
0010f1f8 00000088 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0010f280 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0010f284 000000a4 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
0010f328 0000004c W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0010f328 0000004c W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0010f374 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0010f3d0 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0010f3e4 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0010f3e4 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0010f404 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0010f430 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0010f498 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0010f4c4 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0010f508 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0010f578 0000002c T __cxa_call_terminate
0010f5a4 00000154 T __cxa_call_unexpected
0010f6f8 00000014 T std::get_new_handler()
0010f70c 00000120 T __udivmoddi4
0010f82c 00000018 t selfrel_offset31
0010f844 00000090 t search_EIT_table
0010f8d4 00000040 t __gnu_unwind_get_pr_addr
0010f914 00000118 t get_eit_entry
0010fa2c 00000088 t restore_non_core_regs
0010fab4 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
0010fac8 00000004 t _Unwind_DebugHook
0010facc 00000064 t unwind_phase2
0010fb30 00000134 t unwind_phase2_forced
0010fc64 000000a4 T __gnu_Unwind_RaiseException
0010fd08 00000028 T __gnu_Unwind_ForcedUnwind
0010fd30 00000074 T __gnu_Unwind_Resume
0010fda4 00000020 T __gnu_Unwind_Resume_or_Rethrow
0010fdc4 00000004 T _Unwind_Complete
0010fdc8 00000018 T _Unwind_DeleteException
0010fde0 0000005c T _Unwind_VRS_Get
0010fe3c 0000002c t _Unwind_GetGR
0010fe68 0000005c T _Unwind_VRS_Set
0010fec4 0000002c t _Unwind_SetGR
0010fef0 000000c0 T __gnu_Unwind_Backtrace
0010ffb0 00000420 t __gnu_unwind_pr_common
001103d0 00000008 T __aeabi_unwind_cpp_pr0
001103d8 00000008 W __aeabi_unwind_cpp_pr1
001103e0 00000008 W __aeabi_unwind_cpp_pr2
001103e8 000003d8 T _Unwind_VRS_Pop
001107c0 00000064 t next_unwind_byte
00110824 0000002c t _Unwind_GetGR.constprop.0
00110850 00000004 t unwind_UCB_from_context
00110854 00000424 T __gnu_unwind_execute
00110c78 00000048 T __gnu_unwind_frame
00110cc0 00000010 T _Unwind_GetRegionStart
00110cd0 0000001c T _Unwind_GetLanguageSpecificData
00110cec 00000008 T _Unwind_GetDataRelBase
00110cf4 00000008 T _Unwind_GetTextRelBase
00110cfc 00000014 T abort
00110d10 00000078 T bsearch
00110d88 0000000c T __errno
00110d94 00000034 T exit
00110dc8 00000160 T _fclose_r
00110f28 00000020 T fclose
00110f48 00000258 T __sflush_r
001111a0 00000094 T _fflush_r
00111234 00000038 T fflush
0011126c 0000000c T _cleanup_r
00111278 00000184 T __sinit
001113fc 00000134 T __sfp
00111530 0000000c T __sfp_lock_acquire
0011153c 0000000c T __sfp_lock_release
00111548 0000003c T __libc_fini_array
00111584 00000140 T _fopen_r
001116c4 00000028 T fopen
001116ec 000002d0 T _fread_r
001119bc 00000038 T fread
001119f4 000000f8 T _malloc_trim_r
00111aec 000002e4 T _free_r
00111dd0 0000001c T _fseek_r
00111dec 00000034 T fseek
00111e20 000004f8 T _fseeko_r
00112318 00000034 T ftell
0011234c 000001bc T _ftello_r
00112508 00000068 T _fwalk
00112570 00000070 T _fwalk_reent
001125e0 0000007c T __libc_init_array
0011265c 00000138 T __smakebuf_r
00112794 00000094 T __swhatbuf_r
00112828 00000028 T memalign
00112850 00000148 T _memalign_r
00112998 00000020 T malloc
001129b8 00000020 T free
001129d8 000007f0 T _malloc_r
001131c8 000000e0 T memchr
001132a8 0000011c T memcpy
001133c4 00000154 T memmove
00113518 00000118 T memset
00113630 0000000c T __malloc_lock
0011363c 0000000c T __malloc_unlock
00113648 000000e0 T _puts_r
00113728 00000020 T puts
00113748 0000001c t lflush
00113764 000001ac T __srefill_r
00113910 00000260 T setvbuf
00113b70 00000098 T _raise_r
00113c08 00000020 T raise
00113c28 00000074 T sscanf
00113c9c 00000044 T __sread
00113ce0 00000008 T __seofread
00113ce8 00000068 T __swrite
00113d50 00000048 T __sseek
00113d98 00000008 T __sclose
00113da0 0000005c T strlen
00113dfc 000000ec T strncat
00113ee8 000000dc T strncmp
00113fc4 000000c0 T strncpy
00114084 00000048 T strnlen
001140cc 000001c8 t _strtoul_l.constprop.0
00114294 00000004 T _strtoul_r
00114298 00000050 t get_arg
001142e8 00002b68 T __ssvfscanf_r
00116e50 0000064c t get_arg
0011749c 00000034 T __sprint_r
001174d0 00002584 T _vfiprintf_r
00119a54 000000d4 t __sbprintf
00119b28 00000054 T _wcrtomb_r
00119b7c 00000028 T _wcsrtombs_r
00119ba4 00000154 T __swsetup_r
00119cf8 00000114 T __call_exitprocs
00119e0c 000000c8 T __sflags
00119ed4 000004a4 T __sfvwrite_r
0011a378 00000008 T iswspace
0011a380 0000000c T _localeconv_r
0011a38c 00000010 T __locale_mb_cur_max
0011a39c 00000068 T _mbrtowc_r
0011a404 000002fc T __utf8_mbtowc
0011a700 00000028 T realloc
0011a728 00000598 T _realloc_r
0011acc0 000000e4 T __sccl
0011ada4 0000000c T nanf
0011adb0 00000064 T sprintf
0011ae14 000000b8 T stpncpy
0011aecc 00000144 T strchr
0011b010 0000130c T _strtod_l
0011c31c 0000000c T _strtod_r
0011c328 0000022c t _strtoll_l.constprop.0
0011c554 00000004 T _strtoll_r
0011c558 000001b0 t _strtol_l.part.0
0011c708 0000003c T _strtol_r
0011c744 00000244 t _strtoull_l.constprop.0
0011c988 00000004 T _strtoull_r
0011c98c 00000188 T __ssprint_r
0011cb14 000000e0 T _sungetc_r
0011cbf4 0000006c T __ssrefill_r
0011cc60 000000c8 T _sfread_r
0011cd28 0000064c t get_arg
0011d378 00003808 T _svfprintf_r
00120b80 000000a8 T __submore
00120c28 00000190 T _wcsnrtombs_l
00120db8 0000004c T _wcsnrtombs_r
00120e04 000000f0 T __utf8_wctomb
00120ef4 000001a8 t quorem
001210a0 000012ec T _dtoa_r
0012238c 000000ec t rshift
00122478 00000928 T __gethex
00122da0 0000004c T __match
00122dec 0000029c T __hexnan
00123088 0000003c T iswspace_l
001230c4 000001d4 t __jp2uc
00123298 0000009c T _jp2uc_l
00123334 00000088 T _Balloc
001233bc 0000001c T _Bfree
001233d8 000000f4 T __multadd
001234cc 00000110 T __s2b
001235dc 00000058 T __hi0bits
00123634 0000009c T __lo0bits
001236d0 000000a4 T __i2b
00123774 00000204 T __multiply
00123978 00000120 T __pow5mult
00123a98 0000013c T __lshift
00123bd4 00000058 T __mcmp
00123c2c 000001cc T __mdiff
00123df8 00000088 T __ulp
00123e80 000000d4 T __b2d
00123f54 0000012c T __d2b
00124080 00000078 T __ratio
001240f8 00000088 T __copybits
00124180 0000005c T __any_on
001241e0 000000a8 T frexp
00124288 00000010 T nan
00124298 0000005c T __assert_func
001242f4 00000094 T _calloc_r
00124388 00000084 T category
0012440c 0000003c T fiprintf
00124448 00000008 t null_write
00124450 00000018 T setDefaultDevice
00124468 000000c8 T FindDevice
00124530 00000028 T RemoveDevice
00124558 0000009c T AddDevice
001245f4 00000020 T GetDeviceOpTab
00124614 00000078 T _fstat_r
0012468c 00000014 T _getpid_r
001246a0 00000008 T _isatty_r
001246a8 00000014 T _kill_r
001246bc 00000084 T _lseek_r
00124740 000000c8 T _open_r
00124808 00000080 T _read_r
00124888 00000078 T _sbrk_r
00124900 00000080 T _write_r
00124980 00000024 T _exit
001249a4 000001b8 T _concatenate_path
00124b5c 00000160 T chdir
00124cbc 00000008 T __flockfile
00124cc4 00000008 T __funlockfile
00124ccc 00000018 T __libc_lock_acquire
00124ce4 00000018 T __libc_lock_release
00124cfc 00000018 T __libc_lock_init_recursive
00124d14 00000018 T __libc_lock_acquire_recursive
00124d2c 00000018 T __libc_lock_release_recursive
00124d44 00000018 T __libc_lock_close_recursive
00124d5c 0000008c T __release_handle
00124de8 000000b4 T __alloc_handle
00124e9c 0000003c T __get_handle
00124ed8 000000f4 T _close_r
00124fcc 00000028 T __getreent
00124ff4 00000038 T __aeabi_d2lz
00124ff4 00000038 T __fixdfdi
00125030 00000040 T __aeabi_d2ulz
00125030 00000040 T __fixunsdfdi
00125070 00000044 T strrchr
001250b4 T _fini
001260a0 r .LC1
00126138 00000030 r colorTable
00126168 00000070 r dotab_stdout
001261e0 00000011 r dsp_filename.0
0012623c 00000008 r morton_x.3
00126244 00000008 r morton_y.2
0012624c 00000008 r s_sleepWakeEvents.4
00126274 R default_font_bin
00126a74 R default_font_bin_end
00126aac 00000070 r archive_devoptab
00126b1c 00000030 r error_table
00126b74 0000000c R typeinfo for std::bad_alloc
00126b80 0000000d R typeinfo name for std::bad_alloc
00126b90 00000014 R vtable for std::bad_alloc
00126bb8 00000008 R typeinfo for __cxxabiv1::__forced_unwind
00126bc0 00000008 R typeinfo for __cxxabiv1::__foreign_exception
00126bc8 0000000c R typeinfo for std::bad_exception
00126bd4 00000008 R typeinfo for std::exception
00126bdc 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
00126bfc 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
00126c20 00000012 R typeinfo name for std::bad_exception
00126c34 0000000d R typeinfo name for std::exception
00126c44 00000014 R vtable for std::bad_exception
00126c58 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
00126c64 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
00126c8c 0000002c R vtable for __cxxabiv1::__si_class_type_info
00126cb8 00000008 R typeinfo for std::type_info
00126cc0 0000000d R typeinfo name for std::type_info
00126cd0 0000000c R typeinfo for std::logic_error
00126cdc 0000000c R typeinfo for std::length_error
00126ce8 00000010 R typeinfo name for std::logic_error
00126cf8 00000011 R typeinfo name for std::length_error
00126d0c 00000014 R vtable for std::logic_error
00126d20 00000014 R vtable for std::length_error
00126d78 0000000c R typeinfo for __cxxabiv1::__class_type_info
00126d84 00000022 R typeinfo name for __cxxabiv1::__class_type_info
00126da8 0000002c R vtable for __cxxabiv1::__class_type_info
00126dd4 00000004 R _global_impure_ptr
00126de0 00000022 r basefix.0
00126e2c 00000010 r blanks.1
00126e3c 00000010 r zeroes.0
00126e4c 00000101 R _ctype_
00126fa8 00000014 r fpi.1
00126fbc 00000014 r fpinan.0
00126fd0 00000028 r tinytens
00126ff8 0000006c R __action_table
00127064 00000100 R __chclass
00127164 0000006c R __state_table
001271e4 00000010 r blanks.1
001271f4 00000010 r zeroes.0
00127214 r .LC2
001272b4 00000100 R __hexdig
001273c8 000000bc r a1
00127484 000000bc r a2
00127540 0000005b r a3
0012759c 00000070 r a6
0012760c 000000a2 r a7
001276b0 00000040 r a8
001276f0 0000172a r b02cf
00128e1c 00001a7c r d02f4
0012a898 0000000c R _C_numeric_locale
0012a8e8 00000028 R __mprec_bigtens
0012a910 000000c8 R __mprec_tens
0012a9d8 0000000c r p05.0
0012aa24 000031e6 r categories
0012dc0c 00000070 R dotab_stdnull
0012dc7c r 
0012dd48 R __exidx_start
0012df00 R __exidx_end
0012e000 00000004 D currentConsole
0012e004 0000004c D defaultConsole
0012e050 00000001 d firstConsoleInit.0
0012e054 00000004 d kCount
0012e058 00000004 d kDelay
0012e05c 00000004 d kInterval
0012e060 W __stacksize__
0012e064 00000004 D __cxxabiv1::__unexpected_handler
0012e068 00000004 D __cxxabiv1::__terminate_handler
0012e06c 0000000c d __sfp_recursive_mutex
0012e078 0000000c d __sinit_recursive_mutex
0012e084 00000004 D _impure_ptr
0012e088 00000460 d impure_data
0012e4e8 00000408 D __malloc_av_
0012e8f0 00000004 D __malloc_sbrk_base
0012e8f4 00000004 D __malloc_trim_threshold
0012e8f8 0000000c d __malloc_recursive_mutex
0012e904 0000000c D __atexit_recursive_mutex
0012e910 0000016c D __global_locale
0012ea7c 00000002 d numempty
0012ea80 00000004 d defaultDevice
0012ea84 0000008c D devoptab_list
0012eb10 00000400 d _current_working_directory
0012ef10 00000004 d __hndl_lock
0012ef14 0000000c d __stderr_handle
0012ef20 0000000c d __stdin_handle
0012ef2c 0000000c d __stdout_handle
0012ef38 00001000 d handles
0012ff40 d _GLOBAL_OFFSET_TABLE_
0012ff4c d __frame_dummy_init_array_entry
0012ff4c D __init_array_start
0012ff4c B __preinit_array_end
0012ff4c B __preinit_array_start
0012ff4c D __tdata_lma
0012ff4c D __tdata_lma_end
0012ff54 d __do_global_dtors_aux_fini_array_entry
0012ff54 D __fini_array_start
0012ff54 D __init_array_end
0012ff58 D __bss_start__
0012ff58 D __fini_array_end
0012ff58 00000040 b BCSTM::play()::mix
0012ff98 b completed.1
0012ff9c b object.0
0012ffb4 00000008 b sLinearPool
0012ffbc 0000000c b sAddrMap
0012ffc8 0000004c B currentCopy
00130014 00000004 b gfxBottomFramebufferMaxSize
00130018 00000008 b gfxBottomFramebuffers
00130020 00000002 b gfxCurBuf
00130024 00000002 b gfxFramebufferFormats
00130028 00000002 b gfxIsDoubleBuf
0013002a 00000001 b gfxIsVram
0013002c 00000004 b gfxTopFramebufferMaxSize
00130030 00000008 b gfxTopFramebuffers
00130038 00000001 b gfxTopMode
0013003c 00000004 b screenAlloc
00130040 00000004 b screenFree
00130044 00000001 b bCancelReceived
00130045 00000001 b bDspReady
00130046 00000001 b bEnteringSleep
00130047 00000001 b bSleeping
00130048 00000004 b componentBin
0013004c 00000002 b componentDataMask
0013004e 00000001 b componentFree
00130050 00000002 b componentProgMask
00130054 00000004 b componentSize
00130058 00000004 b droppedFrames
0013005c 00000004 b dspSem
00130060 00001080 b dspVar5Backup
001310e0 00000004 b frameCount
001310e4 00000004 b irqEvent
001310e8 00000002 B ndspBufferCurId
001310ea 00000002 B ndspBufferId
001310ec 00000002 B ndspFrameId
001310f0 00000008 b ndspHookCookie
001310f8 00000048 b ndspMaster
00131140 00000004 b ndspMutex
00131144 00000004 b ndspRefCount
00131148 00000004 b ndspThread
0013114c 00000001 b ndspThreadRun
00131150 00000080 B ndspVars
001311d0 00000008 b sleepEvent
001311d8 00000c60 b ndspChn
00131e38 00000004 b cfguHandle
00131e3c 00000004 b cfguRefCount
00131e40 00000001 b dspComponentLoaded
00131e44 00000008 b dspFirstHook
00131e4c 00000004 b dspHandle
00131e50 00000004 b dspRefCount
00131e54 00000004 b dspSavedCompBin
00131e58 00000002 b dspSavedCompDataMask
00131e5a 00000002 b dspSavedCompProgMask
00131e5c 00000004 b dspSavedCompSize
00131e60 00000001 b dspSleeping
00131e64 00000004 b gspEvent
00131e68 0000001c b gspEventCb
00131e84 0000001c b gspEventCbData
00131ea0 00000007 b gspEventCbOneShot
00131ea8 00000004 b gspEventThread
00131eac 00000038 b gspEvents
00131ee4 00000004 b gspGpuHandle
00131ee8 00000001 b gspGpuRight
00131eec 00000004 b gspLastEvent
00131ef0 00000004 b gspRefCount
00131ef4 00000001 b gspRunEvents
00131ef8 00000004 b gspSharedMem
00131efc 00000004 b gspSharedMemHandle
00131f00 00000001 b gspThreadId
00131f01 00000001 b aptChainloadFlags
00131f02 00000001 b aptChainloadMediatype
00131f08 00000008 b aptChainloadTid
00131f10 00000004 b aptEventHandlerThread
00131f14 00000001 b aptEventHandlerThreadQuit
00131f18 00000008 b aptEvents
00131f20 0000000c b aptFirstHook
00131f2c 00000004 b aptFlags
00131f30 00000001 b aptHomeButtonState
00131f34 00000004 b aptLockHandle
00131f38 00000004 b aptMessageFunc
00131f3c 00000004 b aptMessageFuncData
00131f40 00001000 b aptParameters
00132f40 00000008 b aptReceiveEvent
00132f48 00000004 b aptRefCount
00132f4c 00000008 b aptSleepEvent
00132f54 00000001 b flagInit.1
00132f55 00000001 b flagValue.0
00132f58 00000004 b serviceName.6
00132f5c 00000006 b aVec
00132f64 00000004 b cPos
00132f68 00000006 b gRate
00132f70 00000014 B hidEvents
00132f84 00000004 B hidHandle
00132f88 00000004 B hidMemHandle
00132f8c 00000004 b hidRefCount
00132f90 00000004 B hidSharedMem
00132f94 00000004 b kDown
00132f98 00000004 b kHeld
00132f9c 00000004 b kOld
00132fa0 00000004 b kRepeat
00132fa4 00000004 b kUp
00132fa8 00000004 b tPos
00132fac 00000001 b usingIrrst
00132fb0 00000080 b fsExemptArchives
00133030 00000004 b fsuHandle
00133034 00000004 b fsuRefCount
00133038 00000004 B __ctru_heap
0013303c 00000004 V __ctru_heap_size
00133040 00000004 B __ctru_linear_heap
00133044 00000004 V __ctru_linear_heap_size
00133048 00000004 B __system_retAddr
0013304c 00000004 B __system_argc
00133050 00000004 B __system_argv
00133054 b saved_stack
0013305c 0000000c b sAddrMap
00133068 00000008 b sVramPool
00133070 00000004 b arbiter
00133074 00000001 V __ctru_speedup
00133078 00000004 b srvHandle
0013307c 00000004 b srvRefCount
00133080 00000004 b currentAddr
00133084 00000004 b maxAddr
00133088 00000004 b minAddr
0013308c 00000004 b csPos
00133090 00000004 B irrstEvent
00133094 00000004 B irrstHandle
00133098 00000004 B irrstMemHandle
0013309c 00000004 b irrstRefCount
001330a0 00000004 B irrstSharedMem
001330a4 00000004 b kHeld
001330a8 00000004 b srvPmHandle
001330ac 00000004 b ptmSysmHandle
001330b0 00000004 b ptmSysmRefCount
001330b4 00000004 b archive_device_cwd
001330b8 00000540 b archive_devices
001335f8 00000001 b archive_initialized
001335fc 00000010 b (anonymous namespace)::emergency_pool
0013360c 0000000c b eh_globals
00133618 00000010 V std::string::_Rep::_S_empty_rep_storage
00133628 00000004 b (anonymous namespace)::__new_handler
0013362c 00000028 B __malloc_current_mallinfo
00133654 00000004 B __malloc_max_sbrked_mem
00133658 00000004 B __malloc_max_total_mem
0013365c 00000004 B __malloc_top_pad
00133660 00000004 b heap_start.0
00133664 00000004 B fake_heap_end
00133668 00000004 B fake_heap_start
0013366c 00000400 b temp_cwd
00133a6c 00000048 B __syscalls
00133ab4 B __tls_start
001346bc B __bss_end__
001346bc A __end__
001346bc B __tls_end
